《复习》
面向对象的三条主线
	类与类的成分
	面向对象的三大特征
	其他关键字：this+super+import+final+abstract+pacakage
	详细说明
	类与类的成分
		Java程序是关注于类的设计，类从设计的角度来说是并列关系
			从执行的角度有关联关系+继承关系+聚合关系
		类的成员：属性+方法+构造器+初始化快+内部类
			属性
				分类
					位置：成员变量+局部变量（方法的形参+方法内部+代码块）
					数据的类型：基本数据类型（8种）+引用数据类型（3种：数组+类+接口）
				声明格式：修饰符 数据类型 变量名 [= 初始化值]
				对属性赋值：默认初始化，显式初始化，代码块，构造器，调用方法进行赋值
			方法
				格式：[abstract final static 关键字] 修饰符 返回值类型类 方法名（形参类表）{//方法体}
				方法的重载 VS 方法的重写
				方法的传递机制（难点）
			构造器
				作用：创建类的对象+初始化对象的成员变量
				可重载
			代码块
				作用：主要用来初始化类的成员变量
				分类：（非）静态代码块
			内部类
				分类：成员内部类（非|静态内部类）+局部内部类
		类的初始化（创建类的对象）
			如何创建类的对象
			内存解析
				堆（FILO）：局部变量+对象的尹永明+数组的引用名
				栈：new出来的“东西”
				方法区：（字符串常量池：不可变）
				静态域：存放静态类中静态的变量（多个对象同用）
				如何理解创建的对象在内存中加载的过程（理解）
	面向对象的三大特性
		封装性
			通过私有化类的成员变量，通过公共的getter+setter方法来调用和修改
			可以对类的其他结构进行“封装”
			权限修饰符 public--protected--default--private
		继承性
			通过让一个类A继承另一个类B，就可以获取类B中的结构（属性，方法，构造器）
			Java中的类的继承为单继承
		多态性（父类+子类的构造器）
			体现：方法的重载和重写； 子类对象的多态性
			子类对象多态性的使用：虚拟方法调用
			向上转型
			向下转型：将父类的形象强转成子类的对象  // 建议在向下转型之前，判断父类的对象创建时的构造器是不是子类的
	其他关键字
		this：修饰属性+方法+构造器，表示当前对象（当前正在创建的对象）
		super：修饰属性+方法+构造器，表示调用弗雷德额相应的结构（尤其是子父类有重名时）
		static：修饰属性+方法+代码块+内部类，随着类的加载而加载
		final：修饰类+属性+方法，表示“最终的”
		abstract：修饰方法+类
		interface：表示是一个接口，和类并列的概念（没有构造器）
		package+import

异常处理
	第二种方式：抓
		定义：自己处理不了，向上抛出该异常
		方式：throws语句（方法）
			修饰符 temp throws Exception {
			}
			在方法的声明处，显式的抛出该异常对象的类型
		异常的对象可以逐层向上抛，直至main中，可以通过try-catch进行处理
	抛
		分类：自动的抛出+手动的抛出（throw+异常类对象）		

 

			
